dplyr::group_by(ola) %>%
dplyr::summarise(edad_promedio = mean(m0_edad),
edad_maxima = max(m0_edad)) %>%
dplyr::ungroup()
elsoc_long_2016_2021 %>%
dplyr::filter(m0_sexo == 2, tipo_atricion == 1) %>%
sjlabelled::as_label(m01) %>%
dplyr::group_by(ola) %>%
dplyr::summarise(edad_promedio = mean(m0_edad),
edad_maxima = max(m0_edad)) %>%
dplyr::ungroup()
elsoc_long_2016_2021 %>%
dplyr::filter(m0_sexo == 2, tipo_atricion == 1) %>%
sjlabelled::as_label(m01) %>%
dplyr::group_by(ola) %>%
dplyr::summarise(edad_promedio = mean(m0_edad),
edad_maxima = max(m0_edad)) %>%
dplyr::ungroup()
elsoc_long_2016_2021 %>%
dplyr::filter(m0_sexo == 2, tipo_atricion == 1) %>%
dplyr::group_by(ola) %>%
dplyr::summarise(edad_promedio = mean(m0_edad),
edad_maxima = max(m0_edad)) %>%
dplyr::ungroup()
elsoc_long_2016_2021 %>%
dplyr::group_by(ola) %>%
dplyr::summarise(edad_promedio = mean(m0_edad),
edad_maxima = max(m0_edad)) %>%
dplyr::ungroup()
elsoc_long_2016_2021 %>%
dplyr::filter(tipo_atricion == 1) %>%
dplyr::group_by(ola) %>%
dplyr::summarise(edad_promedio = mean(m0_edad),
edad_maxima = max(m0_edad)) %>%
dplyr::ungroup()
elsoc_long_2016_2021 %>%
dplyr::filter(tipo_atricion == 1) %>%
dplyr::group_by(ola, m0_sexo) %>%
dplyr::summarise(edad_promedio = mean(m0_edad),
edad_maxima = max(m0_edad)) %>%
dplyr::ungroup()
elsoc_long_2016_2021 <- elsoc_wide_2016_2019 %>%
pivot_longer(cols = -c('idencuesta'),
names_to = c('.value', 'ola'),
names_sep = '_w0')
View(elsoc_long_2016_2021)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
elsoc_long_2016_2021 %>%
dplyr::filter(tipo_atricion == 1) %>%
dplyr::group_by(ola) %>%
dplyr::summarise(edad_promedio = mean(m0_edad),
edad_maxima = max(m0_edad)) %>%
dplyr::ungroup()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
a <- 100
a+2
log(a)
runif(5)
runif(5, min = .4, max = .6)
runif(5, .4, .6)
# Aquí defino A
A <- 3
B <- 2 # Aquí defino B
A+B
x <- c(1, 2, 3, 4)
x
class(x)
y <- c('uno', 'A', 'cuadrado', 'manzana')
y
class(y)
```
.pull-right[
![](ceci-nest-pas-un-pipe.png)
]
elsoc::lookfor('satisf')
elsoc::describe_elsoc('c01')
sjmisc::frq(elsoc_long_2016_2021$c01)
elsoc::load_elsoc()
sjmisc::frq(elsoc_long_2016_2021$c01)
elsoc_long_2016_2021 %>%
filter(tipo_atricion == 1,
!c01 %in% c(-666, -777, -888, -999))
?sum
elsoc_long_2016_2021 %>%
filter(tipo_atricion == 1,
!c01 %in% c(-666, -777, -888, -999)) %>%
mutate(satisf_dem = factor(car::recode(c01, "1:3 = 1; 4:5 = 2"),
levels = c(1, 2),
labels = c('No satisfecho', 'Satisfecho'))) %>%
group_by(ola, m0_sexo) %>%
summarise(freq = sum(c01, wt = ponderador02))
elsoc_long_2016_2021 %>%
filter(tipo_atricion == 1,
!c01 %in% c(-666, -777, -888, -999)) %>%
mutate(sexo = factor(m0_sexo,
levels = c(1, 2),
labels = c('Hombre', 'Mujer'))) %>%
group_by(ola, sexo) %>%
summarise(freq = sum(c01, wt = ponderador02))
elsoc_long_2016_2021 %>%
filter(tipo_atricion == 1,
!c01 %in% c(-666, -777, -888, -999)) %>%
mutate(sexo = factor(m0_sexo,
levels = c(1, 2),
labels = c('Hombre', 'Mujer'))) %>%
group_by(ola, sexo) %>%
summarise(n = sum(c01, wt = ponderador02, na.rm = TRUE)) %>%
group_by(ola) %>%
summarise(freq = n / sum(n, na.rm = TRUE))
elsoc_long_2016_2021 %>%
filter(tipo_atricion == 1,
!c01 %in% c(-666, -777, -888, -999)) %>%
mutate(sexo = factor(m0_sexo,
levels = c(1, 2),
labels = c('Hombre', 'Mujer'))) %>%
group_by(ola, sexo) %>%
summarise(n = sum(c01, wt = ponderador02, na.rm = TRUE)) %>%
ungroup() %>%
group_by(ola) %>%
summarise(freq = n / sum(n, na.rm = TRUE))
elsoc_long_2016_2021 %>%
filter(tipo_atricion == 1,
!c01 %in% c(-666, -777, -888, -999)) %>%
mutate(sexo = factor(m0_sexo,
levels = c(1, 2),
labels = c('Hombre', 'Mujer'))) %>%
group_by(ola, sexo) %>%
summarise(n = sum(c01, wt = ponderador02, na.rm = TRUE)) %>%
group_by(sexo) %>%
summarise(freq = n / sum(n, na.rm = TRUE))
elsoc_long_2016_2021 %>%
filter(tipo_atricion == 1,
!c01 %in% c(-666, -777, -888, -999)) %>%
mutate(sexo = factor(m0_sexo,
levels = c(1, 2),
labels = c('Hombre', 'Mujer'))) %>%
group_by(ola, sexo) %>%
summarise(n = sum(c01, wt = ponderador02, na.rm = TRUE)) %>%
group_by(ola) %>%
mutate(freq = n / sum(n, na.rm = TRUE))
elsoc_long_2016_2021 %>%
filter(tipo_atricion == 1,
!c01 %in% c(-666, -777, -888, -999)) %>%
mutate(sexo = factor(m0_sexo,
levels = c(1, 2),
labels = c('Hombre', 'Mujer'))) %>%
group_by(ola, sexo, c01) %>%
summarise(n = sum(c01, wt = ponderador02, na.rm = TRUE)) %>%
group_by(ola, sexo) %>%
mutate(freq = n / sum(n, na.rm = TRUE))
elsoc_long_2016_2021 %>%
filter(tipo_atricion == 1,
!c01 %in% c(-666, -777, -888, -999)) %>%
mutate(sexo = factor(m0_sexo,
levels = c(1, 2),
labels = c('Hombre', 'Mujer'))) %>%
group_by(ola, sexo) %>%
summarise(n = mean(c01 %in% 4:5, wt = ponderador02, na.rm = TRUE))
elsoc_long_2016_2021 %>%
filter(tipo_atricion == 1,
!c01 %in% c(-666, -777, -888, -999)) %>%
mutate(sexo = factor(m0_sexo,
levels = c(1, 2),
labels = c('Hombre', 'Mujer'))) %>%
group_by(ola, sexo) %>%
summarise(freq = mean(c01 %in% 4:5, wt = ponderador02, na.rm = TRUE))
freq %>%
ggplot(aes(y = freq, x = ola, color = sexo, group = sexo)) +
geom_line() +
geom_point()
elsoc_long_2016_2021 %>%
filter(tipo_atricion == 1,
!c01 %in% c(-666, -777, -888, -999)) %>%
mutate(sexo = factor(m0_sexo,
levels = c(1, 2),
labels = c('Hombre', 'Mujer'))) %>%
group_by(ola, sexo) %>%
summarise(freq = mean(c01 %in% 4:5, wt = ponderador02, na.rm = TRUE)) %>%
ggplot(aes(y = freq, x = ola, color = sexo, group = sexo)) +
geom_line() +
geom_point()
elsoc_long_2016_2021 %>%
filter(tipo_atricion == 1,
!c01 %in% c(-666, -777, -888, -999)) %>%
mutate(sexo = factor(m0_sexo,
levels = c(1, 2),
labels = c('Hombre', 'Mujer'))) %>%
group_by(ola, sexo) %>%
summarise(freq = mean(c01 %in% 4:5, wt = ponderador02, na.rm = TRUE)) %>%
ggplot(aes(y = freq, x = ola, color = sexo, group = sexo)) +
geom_line() +
geom_point() +
scale_y_continuous(limits = c(0,1 ))
elsoc_reducido <- dplyr::select(elsoc_long_2016_2021, ola, tipo_atricion, m0_sexo, 'm0_edad')
elsoc_reducido[1:5,]
elsoc_reducido <- dplyr::select(elsoc_long_2016_2021, ola, tipo_atricion, 'm0_sexo', 'm0_edad')
elsoc_reducido[1:5,]
select(elsoc_long_2016_2021, num_range('c0', 1:3))
select(elsoc_long_2016_2021, num_range('c0', 1:3))[, 1:5]
select(elsoc_long_2016_2021, num_range('c0', 1:3))[1:5, ]
elsoc_modelo <- elsoc_long_2016_2021 %>%
filter(tipo_atricion == 1, !c01 %in% c(-666, -777, -888, -999)) %>%
mutate(satisf_dem = factor(c01 %in% 4:5,
levels = c(FALSE, TRUE),
labels = c('No satisfecho', 'Satisfecho')))
lm(satisf_dem ~ 1 + m0_sexo, weights = ponderador02, data = elsoc_modelo )
m1 <- lm(satisf_dem ~ 1 + m0_sexo, weights = ponderador02, data = elsoc_modelo )
elsoc_modelo <- elsoc_long_2016_2021 %>%
filter(tipo_atricion == 1, !c01 %in% c(-666, -777, -888, -999)) %>%
mutate(satisf_dem = factor(c01 %in% 4:5,
levels = c(FALSE, TRUE),
labels = c('No satisfecho', 'Satisfecho')))
m1 <- lm(satisf_dem ~ 1 + m0_sexo, weights = ponderador02, data = elsoc_modelo )
m1 <- lm(satisf_dem ~ 1 + m0_sexo, weights = elsoc_modelo$ponderador02, data = elsoc_modelo )
m1 <- lm(satisf_dem ~ 1 + m0_sexo, data = elsoc_modelo )
m1 <- glm(satisf_dem ~ 1 + m0_sexo,
family = binomial(link='logit'),
data = elsoc_modelo)
elsoc_modelo <- elsoc_long_2016_2021 %>%
filter(tipo_atricion == 1, !c01 %in% c(-666, -777, -888, -999)) %>%
mutate(satisf_dem = factor(c01 %in% 4:5,
levels = c(FALSE, TRUE),
labels = c('No satisfecho', 'Satisfecho')))
m1 <- glm(satisf_dem ~ 1 + m0_sexo,
family = binomial(link='logit'),
data = elsoc_modelo)
summary(m1)
View(m1)
m1 <- glm(c01 %in% 4:5 ~ 1 + m0_sexo,
family = binomial(link='logit'),
data = elsoc_modelo)
summary(m1)
elsoc_modelo <- elsoc_long_2016_2021 %>%
filter(tipo_atricion == 1, !c01 %in% c(-666, -777, -888, -999))
m1 <- glm(c01 %in% 4:5 ~ 1 + m0_sexo,
family = binomial(link='logit'),
data = elsoc_modelo)
m1 <- lm(c01 %in% 4:5 ~ 1 + m0_sexo,
data = elsoc_modelo)
m2 <- glm(c01 %in% 4:5 ~ 1 + m0_sexo,
family = binomial(link='logit'),
data = elsoc_modelo)
summary(m1)
summary(m2)
modelsummary::modelsummary(list(m1, m2),
estimate = "{estimate}{stars}",
statistic = NULL,
stars = c('*' = .05, '**' = .01, '***' = .001),
# shape = term + response ~ model,
exponentiate = TRUE,
output = 'resultados.docx')
# shape = term + response ~ model)
modelsummary::modelsummary(list(m1, m2),
estimate = "{estimate}{stars}",
statistic = NULL,
stars = c('*' = .05, '**' = .01, '***' = .001))
modelsummary::modelsummary(list(m1, m2))
modelsummary::modelsummary(list(m1, m2),
stars = c('*' = .05, '**' = .01, '***' = .001))
g1 <- data.frame(prop.table(tabla1))
tabla1 <- table(elsoc_long_2016_2021$idcoal)
prop.table(tabla1)
table(elsoc_long_2016_2021$idcoal)
table(elsoc_long_2016_2021$c01)
prop.table(tabla1)
tabla1 <- table(elsoc_long_2016_2021$c01)
prop.table(tabla1)
(tabla2 <- table(elsoc_long_2016_2021$idcoal, elsoc_long_2016_2021$conf_presi))
(tabla2 <- table(elsoc_long_2016_2021$c01, elsoc_long_2016_2021$c02))
prop.table(tabla2)
prop.table(tabla2, margin = 1)
prop.table(tabla2, margin = 2)
elsoc_modelo <- elsoc_long_2016_2021 %>%
filter(tipo_atricion == 1, !c01 %in% c(-666, -777, -888, -999))
m1 <- lm(c01 %in% 4:5 ~ 1 + m0_sexo,
data = elsoc_modelo)
m2 <- glm(c01 %in% 4:5 ~ 1 + m0_sexo,
family = binomial(link='logit'),
data = elsoc_modelo)
modelsummary::modelsummary(list(m1, m2),
stars = c('*' = .05, '**' = .01, '***' = .001))
ggplot(dataset, aes(x=xvar, y=yvar)) + geom_function()
g1 <- data.frame(prop.table(tabla1))
ggplot(g1, aes(y = Freq, x = Var1)) +
geom_col()
##### Distintas funciones para cargar datos ####
ejemplo1 <- haven::read_dta(file = file.path('inputs', 'ELSOC_Long_2016_2021_v1.00_R.dta'))
# Análisis exploratorio
class(elsoc_long_2016_2021)
dim(elsoc_long_2016_2021)
names(elsoc_long_2016_2021)
head(elsoc_long_2016_2021[1:6], n = 5)
elsoc_long <- elsoc_long_2016_2021 %>%
dplyr::filter(tipo_atricion == 1 & tipo_caso != 2) %>%
dplyr::select(idencuesta, m0_sexo, m0_edad, c17, c05)
elsoc_long <- elsoc_long_2016_2021 %>%
dplyr::filter(tipo_atricion == 1 & tipo_caso != 2) %>%
dplyr::select(idencuesta, m0_sexo, m0_edad, c17, c05_08)
# Cambiar base a formato long
elsoc_long <- elsoc_long %>%
pivot_longer(cols = -c('idencuesta'),
names_to = c('.value', 'ola'),
names_sep = '_w0')
# Recodificar NAs
elsoc_long[elsoc_long == -999 | elsoc_long == -888] <- NA
# Ola
elsoc_long$ola <- factor(elsoc_long$ola,labels = c('2016', '2017', '2018', '2019', '2021'))
####################################################################################
########### Script para acompañar y complementar curso de introducción a R #########
####################################################################################
# Limpiar espacio de trabajo
rm(list = ls())
# Cargar librerías que vamos a utilizar
library(tidyverse)
# Fija directorio de trabajo a carpeta en que esta el script:
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
##### Distintas funciones para cargar datos ####
ejemplo1 <- haven::read_dta(file = file.path('inputs', 'ELSOC_Long_2016_2021_v1.00_R.dta'))
load(file.path('inputs', 'ELSOC_Long_2016_2021_v1.00_R.RData'))
# Cargar base de datos elsoc
load(url("https://dataverse.harvard.edu/api/access/datafile/6160173"))
# Análisis exploratorio
class(elsoc_long_2016_2021)
dim(elsoc_long_2016_2021)
names(elsoc_long_2016_2021)
head(elsoc_long_2016_2021[1:6], n = 5)
#View(elsoc_long_2016_2021)
# Filtrar y seleccionar casos y variables relevantes
elsoc_long <- elsoc_long_2016_2021 %>%
dplyr::filter(tipo_atricion == 1 & tipo_caso != 2) %>%
dplyr::select(idencuesta, m0_sexo, m0_edad, c17, c05_08)
# Recodificar NAs
elsoc_long[elsoc_long == -999 | elsoc_long == -888] <- NA
# Recodificar variables:
# Ola
elsoc_long$ola <- factor(elsoc_long$ola, labels = c('2016', '2017', '2018', '2019', '2021'))
elsoc_long <- elsoc_long_2016_2021 %>%
dplyr::filter(tipo_atricion == 1 & tipo_caso != 2) %>%
dplyr::select(idencuesta, m0_sexo, ola, m0_edad, c17, c05_08)
# Recodificar NAs
elsoc_long[elsoc_long == -999 | elsoc_long == -888] <- NA
# Ola
elsoc_long$ola <- factor(elsoc_long$ola, labels = c('2016', '2017', '2018', '2019', '2021'))
# Sexo
elsoc_long$sexo <- factor(elsoc_long$m0_sexo,labels = c('Hombre', 'Mujer'))
# Generar variable de identificación con coalición política
elsoc_long$idcoal <- factor(elsoc_long$c17,
labels = c('Chile Vamos','Nueva Mayoría','Frente Amplio', 'Otra','Ninguna'))
sjmisc::frq(elsoc_long_2016_2021$c17)
# Generar variable de confianza en el presidente
elsoc_long$conf_presi <- factor(elsoc_long$c05_08,
labels = c('Nada', 'Poco', 'Algo', 'Bastante', 'Mucho'))
# Estadíticas descriptivas básicas
mean(elsoc_long$m0_edad, na.rm = TRUE)
median(elsoc_long$m0_edad, na.rm = TRUE)
sd(elsoc_long$m0_edad, na.rm = TRUE)
elsoc_long %>%
dplyr::group_by(ola) %>%
dplyr::summarise(edad_promedio = mean(m0_edad, na.rm = TRUE))
# Tablas de frecuencia
table(elsoc_long$idcoal)
tabla1 <- table(elsoc_long$idcoal)
prop.table(tabla1)
# Tablas de frecuencia bivariada
(tabla2 <- table(elsoc_long$idcoal, elsoc_long$conf_presi))
prop.table(tabla2)
prop.table(tabla2, margin = 1)
prop.table(tabla2, margin = 2)
# ejemplo 1
tabla1 <- table(elsoc_long$idcoal)
g1 <- data.frame(prop.table(tabla1))
(ejemplo1 <- ggplot(g1, aes(y = Freq, x = Var1)) +
geom_col())
ejemplo1 +
theme_bw() +
scale_y_continuous(limits = c(0,1), labels = scales::percent) +
geom_text(aes(label = scales::percent(Freq, accuracy = .1)),
vjust = -.5) +
xlab('Identificación con coalición política') +
ylab('Frecuencia')
# ejemplo 2
ggplot(data = elsoc_long,
aes(x = m0_edad, color = idcoal)) +
geom_density()
# ejemplo 3
elsoc_long %>%
dplyr::filter(ola == '2019' & !is.na(idcoal)) %>%
ggplot(aes(y = m0_edad, x = idcoal)) +
geom_boxplot()
# ejemplo 4
elsoc_long %>%
dplyr::filter(ola == '2019' & !is.na(idcoal)) %>%
ggplot(aes(y = m0_edad, x = idcoal, fill = sexo)) +
geom_boxplot()
# Estadíticas descriptivas básicas
mean(elsoc_long$m0_edad, na.rm = TRUE)
median(elsoc_long$m0_edad, na.rm = TRUE)
sd(elsoc_long$m0_edad, na.rm = TRUE)
elsoc_long %>%
dplyr::group_by(ola) %>%
dplyr::summarise(edad_promedio = mean(m0_edad, na.rm = TRUE))
# Tablas de frecuencia
table(elsoc_long$idcoal)
tabla1 <- table(elsoc_long$idcoal)
prop.table(tabla1)
elsoc_long <- elsoc_long_2016_2021 %>%
# Filtrar por atrición y casos perdidos
dplyr::filter(tipo_atricion == 1,
!c17 %in% c(-666, -777, -888, -999),
!c05_08 %in% c(-666, -777, -888, -999)) %>%
# Crear variables nuevas con etiquetas
dplyr::mutate(
ola = factor(ola, labels = c('2016', '2017', '2018', '2019', '2021')),
sexo = factor(m0_sexo, labels = c('Hombre', 'Mujer')),
# Generar variable de identificación con coalición política
idcoal = factor(c17,
labels = c('Chile Vamos','Nueva Mayoría','Frente Amplio', 'Otra','Ninguna')),
# Generar variable de confianza en el presidente
conf_presi = factor(elsoc_long$c05_08,
labels = c('Nada', 'Poco', 'Algo', 'Bastante', 'Mucho'))) %>%
dplyr::select(idencuesta, m0_sexo, ola, m0_edad, idcoal, conf_presi)
elsoc_long <- elsoc_long_2016_2021 %>%
# Filtrar por atrición y casos perdidos
dplyr::filter(tipo_atricion == 1,
!c17 %in% c(-666, -777, -888, -999),
!c05_08 %in% c(-666, -777, -888, -999)) %>%
# Crear variables nuevas con etiquetas
dplyr::mutate(
ola = factor(ola, labels = c('2016', '2017', '2018', '2019', '2021')),
sexo = factor(m0_sexo, labels = c('Hombre', 'Mujer')),
# Generar variable de identificación con coalición política
idcoal = factor(c17,
labels = c('Chile Vamos','Nueva Mayoría','Frente Amplio', 'Otra','Ninguna')),
# Generar variable de confianza en el presidente
conf_presi = factor(c05_08,
labels = c('Nada', 'Poco', 'Algo', 'Bastante', 'Mucho'))) %>%
dplyr::select(idencuesta, m0_sexo, ola, m0_edad, idcoal, conf_presi)
# Estadíticas descriptivas básicas
mean(elsoc_long$m0_edad, na.rm = TRUE)
median(elsoc_long$m0_edad, na.rm = TRUE)
sd(elsoc_long$m0_edad, na.rm = TRUE)
elsoc_long %>%
dplyr::group_by(ola) %>%
dplyr::summarise(edad_promedio = mean(m0_edad, na.rm = TRUE))
# Tablas de frecuencia
table(elsoc_long$idcoal)
tabla1 <- table(elsoc_long$idcoal)
prop.table(tabla1)
table(elsoc_long_2016_2021$idcoal)
```{r}
table(elsoc_long$idcoal)
tabla1 <- table(elsoc_long$idcoal)
prop.table(tabla1)
(tabla2 <- table(elsoc_long$idcoal, elsoc_long$conf_presi))
m1 <- lm(conf_presi %in% 4:5 ~ 1 + m0_sexo,
data = elsoc_modelo)
m1 <- lm(conf_presi %in% 4:5 ~ 1 + m0_sexo,
data = elsoc_long)
m2 <- glm(conf_presi %in% 4:5 ~ 1 + m0_sexo,
family = binomial(link='logit'),
data = elsoc_long)
modelsummary::modelsummary(list(m1, m2),
stars = c('*' = .05, '**' = .01, '***' = .001))
sjmisc::frq(elsoc_long$conf_presi)
m1 <- lm(conf_presi %in% c('Bastante', 'Mucho') ~ 1 + m0_sexo,
data = elsoc_long)
m2 <- glm(conf_presi %in% c('Bastante', 'Mucho') ~ 1 + m0_sexo,
family = binomial(link='logit'),
data = elsoc_long)
modelsummary::modelsummary(list(m1, m2),
stars = c('*' = .05, '**' = .01, '***' = .001))
m1 <- lm(conf_presi %in% c('Bastante', 'Mucho') ~ 1 + m0_sexo + m0_edad + ola,
data = elsoc_long)
m2 <- glm(conf_presi %in% c('Bastante', 'Mucho') ~ 1 + m0_sexo + m0_edad + ola,
family = binomial(link='logit'),
data = elsoc_long)
m2 <- glm(conf_presi %in% c('Bastante', 'Mucho') ~ 1 + m0_sexo + m0_edad + ola,
family = binomial(link='logit'),
data = elsoc_long)
modelsummary::modelsummary(list(m1, m2),
stars = c('*' = .05, '**' = .01, '***' = .001))
modelsummary::modelsummary(list(m1, m2),
estimate = "{estimate}{stars}",
statistic = NULL,
stars = c('*' = .05, '**' = .01, '***' = .001))
?modelsummary
modelsummary::modelsummary(list(m1, m2),
estimate = "{estimate}{stars}({std.error})",
statistic = NULL,
stars = c('*' = .05, '**' = .01, '***' = .001))
modelsummary::modelsummary(list(m1, m2),
estimate = "{estimate}{stars} ({std.error})",
statistic = NULL,
stars = c('*' = .05, '**' = .01, '***' = .001))
get_gof(m1)
modelsummary::get_gof(m1)
modelsummary::modelsummary(list(m1, m2),
estimate = "{estimate}{stars} ({std.error})",
statistic = NULL,
stars = c('*' = .05, '**' = .01, '***' = .001),
gof_map = c('nobs', 'adj.r.squared'))
modelsummary::modelsummary(list(m1, m2),
estimate = "{estimate}{stars} ({std.error})",
stars = c('*' = .05, '**' = .01, '***' = .001),
gof_map = c('nobs', 'adj.r.squared'))
modelsummary::modelsummary(list(m1, m2),
estimate = "{estimate}{stars} ({std.error})",
statistic = NULL,
gof_map = c('nobs', 'adj.r.squared'))
